package be.intecbrussel.sellers;

import be.intecbrussel.eatables.*;
import be.intecbrussel.eatables.Magnum.MagnumType;
import be.intecbrussel.eatables.Cone.Flavor;

/**
 * The class IceCreamSalon takes care of all the business concerning selling ice
 * creams in a salon
 * 
 * @author ERICF
 *
 */

public class IceCreamSalon implements IceCreamSeller {
	private PriceList priceList;
	private double profit = 0;

	/**
	 * Constructor with one parameter
	 * 
	 * @param priceList
	 */
	public IceCreamSalon(PriceList priceList) {
		this.priceList = priceList;
	}

	/**
	 * Returns the profit generated by the selling of ice creams
	 */
	@Override
	public double getProfit() {

		return profit;
	}

	/**
	 * create a new cone with all the flavors asked
	 */

	@Override
	public Cone orderCone(Flavor[] flavors) {
		Cone orderedCone = new Cone(flavors);
		this.profit += (priceList.getBallPrice() * flavors.length);
		return orderedCone;
	}

	/**
	 * create a new IceRocket
	 */
	@Override
	public IceRocket orderIceRocket() {
		IceRocket iceRocket = new IceRocket();
		this.profit += priceList.getRocketPrice();
		return iceRocket;
	}

	/**
	 * create Magnum from a specific magnumType
	 */
	@Override
	public Magnum orderMagnum(MagnumType magnumType) {
		Magnum orderedMagnum = new Magnum(magnumType);
		this.profit += priceList.getMagnumPrice(magnumType);
		return orderedMagnum;
	}

	/**
	 * Returns the name of the class, the priceList and the profit
	 */
	@Override
	public String toString() {
		return "IceCreamSalon [priceList=" + priceList + ", totalProfit=" + profit + "]";
	}

}
